---
title: "Length of solar day in Vinnytsia"
author: "Oleksandr Koval"
format: 
  html: 
    toc: true
    toc-location: right 
    embed-resources: true
editor: visual
---

# Enviroment

```{r}
#| label: Enviroment
#| results: false
#| warning: false


library(tidyverse)
library(rvest)
library(dplyr) 
library(ggplot2)
```

# Data import

```{r}
#| label: tweak-data-1
#| code-summary: Wrangle datas
#| warning: false
#| results: false
#| code-fold: true


# ---- December -----------------------------------------------------
url_dec <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=12&year=2024"
webpage_dec <- read_html(url_dec)
tables_dec <- html_table(webpage_dec, fill = TRUE)
ds0_dec <- tables_dec[[2]]

print(ds0_dec)

ds_daylength_dec <- ds0_dec %>% select(4)
ds_daylength_dec <- ds_daylength_dec[-nrow(ds_daylength_dec),]
ds_daylength_dec <- ds_daylength_dec[-c(1, 2), ]

#ds_daylength <- ds_daylength[-((nrow(ds_daylength)-1):nrow(ds_daylength)), ] to remove a several rows 

ds_number_dec <- ds0_dec %>% select(1)
ds_number_dec <- ds_number_dec[-nrow(ds_number_dec),]
ds_number_dec <- ds_number_dec[-c(1, 2), ]

new_row_december <- data.frame(Year = "1", Daylength = "8:30:06")

ds_combined_december <- cbind(ds_number_dec, ds_daylength_dec)
colnames(ds_combined_december) <- c("Year", "Daylength")
december <- rbind(new_row_december, ds_combined_december)
print(december)
# ---- November -----------------------------------------------------
url_nov <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=11&year=2024"

webpage_nov <- read_html(url_nov)
tables_nov <- html_table(webpage_nov, fill = TRUE)
ds0_nov <- tables_nov[[2]]

ds_daylength_nov <- ds0_nov %>% select(4)
ds_daylength_nov <- ds_daylength_nov[-nrow(ds_daylength_nov),]
ds_daylength_nov <- ds_daylength_nov[-c(1, 2), ]

ds_number_nov <- ds0_nov %>% select(1)
ds_number_nov <- ds_number_nov[-c(1, 2), ]
ds_number_nov <- ds_number_nov[-nrow(ds_number_nov),]

new_row_november <- data.frame(Year = "1", Daylength = "9:49:51")


ds_combined_november <- cbind(ds_number_nov, ds_daylength_nov)
colnames(ds_combined_november) <- c("Year", "Daylength")
november <- rbind(new_row_november, ds_combined_november)
print(november)
# ---- October -----------------------------------------------------
url_oct <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=10&year=2024"
webpage_oct <- read_html(url_oct)
tables_oct <- html_table(webpage_oct, fill = TRUE)
ds0_oct <- tables_oct[[2]]


ds_daylength_oct <- ds0_oct %>% select(4)
ds_daylength_oct <- ds_daylength_oct[-nrow(ds_daylength_oct),]
ds_daylength_oct <- ds_daylength_oct[-c(1, 2, 28), ]

ds_number_oct <- ds0_oct %>% select(1)
ds_number_oct <- ds_number_oct[-c(1, 2, 28), ]
ds_number_oct <- ds_number_oct[-nrow(ds_number_oct),]

ds_combined_october <- cbind(ds_number_oct, ds_daylength_oct)

new_row_october <- data.frame(Year = "1", Daylength = "11:37:55")
colnames(ds_combined_october) <- c("Year", "Daylength")
october <- rbind(new_row_october, ds_combined_october)


print(october)


# ---- September ----------------------------------------------------
url_sep <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=9&year=2024"
webpage_sep <- read_html(url_sep)
tables_sep <- html_table(webpage_sep, fill = TRUE)
ds0_sep <- tables_sep[[2]]

ds_daylength_sep <- ds0_sep %>% select(4)
ds_daylength_sep <- ds_daylength_sep[-nrow(ds_daylength_sep),]
ds_daylength_sep <- ds_daylength_sep[-c(1, 2), ]

ds_number_sep <- ds0_sep %>% select(1)
ds_number_sep <- ds_number_sep[-c(1, 2), ]
ds_number_sep <- ds_number_sep[-nrow(ds_number_sep),]

ds_combined_september <- cbind(ds_number_sep, ds_daylength_sep)

new_row_sep <- data.frame(Year = "1", Daylength = "13:25:29")
colnames(ds_combined_september) <- c("Year", "Daylength")
september <- rbind(new_row_sep, ds_combined_september)

print(september)

# ---- August -----------------------------------------------------
url_aug <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=8&year=2024"
webpage_aug <- read_html(url_aug)
tables_aug <- html_table(webpage_aug, fill = TRUE)
ds0_aug <- tables_aug[[2]]

ds_daylength_aug <- ds0_aug %>% select(4)
ds_daylength_aug <- ds_daylength_aug[-nrow(ds_daylength_aug),]
ds_daylength_aug <- ds_daylength_aug[-c(1, 2), ]

ds_number_aug <- ds0_aug %>% select(1)
ds_number_aug <- ds_number_aug[-c(1, 2), ]
ds_number_aug <- ds_number_aug[-nrow(ds_number_aug),]


ds_combined_august <- cbind(ds_number_aug, ds_daylength_aug)

new_row_aug <- data.frame(Year = "1", Daylength = "15:06:45")
colnames(ds_combined_august) <- c("Year", "Daylength")
august <- rbind(new_row_aug, ds_combined_august)
#new_row_ <- data.frame(Year = "1", Daylength = "")
#colnames(ds_combined_) <- c("Year", "Daylength")
#<- rbind(new_row_, ds_combined_)

print(august)
# ---- July -----------------------------------------------------
url_jul <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=7&year=2024"
webpage_jul <- read_html(url_jul)
tables_jul <- html_table(webpage_jul, fill = TRUE)
ds0_jul <- tables_jul[[2]]

ds_daylength_jul <- ds0_jul %>% select(4)
ds_daylength_jul <- ds_daylength_jul[-nrow(ds_daylength_jul),]
ds_daylength_jul <- ds_daylength_jul[-c(1, 2), ]

ds_number_jul <- ds0_jul %>% select(1)
ds_number_jul <- ds_number_jul[-c(1, 2), ]
ds_number_jul <- ds_number_jul[-nrow(ds_number_jul),]

ds_combined_july <- cbind(ds_number_jul, ds_daylength_jul)

new_row_jul <- data.frame(Year = "1", Daylength = "16:09:32")
colnames(ds_combined_july) <- c("Year", "Daylength")
july <- rbind(new_row_jul, ds_combined_july)

print(july)
# ---- June -----------------------------------------------------
url_jun <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=6&year=2024"
webpage_jun <- read_html(url_jun)
tables_jun <- html_table(webpage_jun, fill = TRUE)
ds0_jun <- tables_jun[[2]]

ds_daylength_jun <- ds0_jun %>% select(4)
ds_daylength_jun <- ds_daylength_jun[-nrow(ds_daylength_jun),]
ds_daylength_jun <- ds_daylength_jun[-c(1, 2), ]

ds_number_jun <- ds0_jun %>% select(1)
ds_number_jun <- ds_number_jun[-c(1, 2), ]
ds_number_jun <- ds_number_jun[-nrow(ds_number_jun),]

ds_combined_june <- cbind(ds_number_jun, ds_daylength_jun)

new_row_jun <- data.frame(Year = "1", Daylength = "15:57:57")
colnames(ds_combined_june) <- c("Year", "Daylength")
june <- rbind(new_row_jun, ds_combined_june)

print(june)
# ---- May -----------------------------------------------------
url_may <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=5&year=2024"
webpage_may <- read_html(url_may)
tables_may <- html_table(webpage_may, fill = TRUE)
ds0_may <- tables_may[[2]]

ds_daylength_may <- ds0_may %>% select(4)
ds_daylength_may <- ds_daylength_may[-nrow(ds_daylength_may),]
ds_daylength_may <- ds_daylength_may[-c(1, 2), ]

ds_number_may <- ds0_may %>% select(1)
ds_number_may <- ds_number_may[-c(1, 2), ]
ds_number_may <- ds_number_may[-nrow(ds_number_may),]

ds_combined_may <- cbind(ds_number_may, ds_daylength_may)

new_row_may <- data.frame(Year = "1", Daylength = "14:38:56")
colnames(ds_combined_may) <- c("Year", "Daylength")
may <- rbind(new_row_may, ds_combined_may)

print(may)
# ---- April -----------------------------------------------------
url_apr <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=4&year=2024"
webpage_apr <- read_html(url_apr)
tables_apr <- html_table(webpage_apr, fill = TRUE)
ds0_apr <- tables_apr[[2]]

ds_daylength_apr <- ds0_apr %>% select(4)
ds_daylength_apr <- ds_daylength_apr[-nrow(ds_daylength_apr),]
ds_daylength_apr <- ds_daylength_apr[-c(1, 2), ]

ds_number_apr <- ds0_apr %>% select(1)
ds_number_apr <- ds_number_apr[-c(1, 2), ]
ds_number_apr <- ds_number_apr[-nrow(ds_number_apr),]

ds_combined_april <- cbind(ds_number_apr, ds_daylength_apr)

new_row_apr <- data.frame(Year = "1", Daylength = "12:54:55")
colnames(ds_combined_april) <- c("Year", "Daylength")
april <- rbind(new_row_apr, ds_combined_april)

print(april)

# ---- March -----------------------------------------------------
url_mar <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=3&year=2024"
webpage_mar <- read_html(url_mar)
tables_mar <- html_table(webpage_mar, fill = TRUE)
ds0_mar <- tables_mar[[2]]

ds_daylength_mar <- ds0_mar %>% select(4)
ds_daylength_mar <- ds_daylength_mar[-nrow(ds_daylength_mar),]
ds_daylength_mar <- ds_daylength_mar[-c(1, 2, 32), ]

ds_number_mar <- ds0_mar %>% select(1)
ds_number_mar <- ds_number_mar[-c(1, 2, 32), ]
ds_number_mar <- ds_number_mar[-nrow(ds_number_mar),]

ds_combined_march <- cbind(ds_number_mar, ds_daylength_mar)

new_row_mar <- data.frame(Year = "1", Daylength = "11:01:45")
colnames(ds_combined_march) <- c("Year", "Daylength")
march <- rbind(new_row_mar, ds_combined_march)


print(march)
# ---- February ----------------------------------------------------
url_feb <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=2&year=20242"
webpage_feb <- read_html(url_feb)
tables_feb <- html_table(webpage_feb, fill = TRUE)
ds0_feb <- tables_feb[[2]]

ds_daylength_feb <- ds0_feb %>% select(4)
ds_daylength_feb <- ds_daylength_feb[-nrow(ds_daylength_feb),]
ds_daylength_feb <- ds_daylength_feb[-c(1, 2), ]

ds_number_feb <- ds0_feb %>% select(1)
ds_number_feb <- ds_number_feb[-c(1, 2), ]
ds_number_feb <- ds_number_feb[-nrow(ds_number_feb),]

ds_combined_february <- cbind(ds_number_feb, ds_daylength_feb)

new_row_feb <- data.frame(Year = "1", Daylength = "9:23:18")
colnames(ds_combined_february) <- c("Year", "Daylength")
february <- rbind(new_row_feb, ds_combined_february)

print(february)
# ---- January ----------------------------------------------------
url_january <- "https://www.timeanddate.com/sun/ukraine/vinnytsia?month=1&year=2024"
webpage_january <- read_html(url_january)
tables_january <- html_table(webpage_january, fill = TRUE)
ds0_january <- tables_january[[2]]

ds_daylength_january <- ds0_january %>% select(4)
ds_daylength_january <- ds_daylength_january[-nrow(ds_daylength_january),]
ds_daylength_january <- ds_daylength_january[-c(1, 2), ]

ds_number_january <- ds0_january %>% select(1)
ds_number_january <- ds_number_january[-c(1, 2), ]
ds_number_january <- ds_number_january[-nrow(ds_number_january),]

ds_combined_january <- cbind(ds_number_january, ds_daylength_january)

new_row_january <- data.frame(Year = "1", Daylength = "8:16:33")
colnames(ds_combined_january) <- c("Year", "Daylength")
january <- rbind(new_row_january, ds_combined_january)

print(january)

# ---- Graph ----------------------------------------------------
year <- rbind(january, february,march, april,may, june, july, august, september, october, november, december)

print(year)
```

# Preparing data to use

```{r}
#| label: tweek-data-2
#| code-summary: Preparing
#| warning: false
#| results: false
#| code-fold: true


# ----- For Graph 1 and filter data------ 


add_day_of_year <- function(data, start_day) {
  data <- data %>% mutate(Day_of_Year = start_day:(start_day + nrow(data) - 1))
  return(data)
}

convert_to_character <- function(data) {
  data <- data %>% mutate(Year = as.character(Year))
  return(data)
}

time_to_hours <- function(time) {
  parts <- str_split(time, ":")[[1]]
  as.numeric(parts[1]) + as.numeric(parts[2]) / 60 + as.numeric(parts[3]) / 3600
} 

months <- rep(month.abb, times = c(nrow(january), nrow(february), nrow(march), 
                                   nrow(april), nrow(may), nrow(june), nrow(july), 
                                   nrow(august), nrow(september), nrow(october), 
                                   nrow(november), nrow(december)))
year$Month <- months

year$Daylength_hours <- sapply(year$Daylength, time_to_hours)

result <- year %>%
  group_by(Month) %>%
  arrange(as.numeric(Year)) %>% # Ensure data is sorted within each month
  mutate(Daily_Diff = c(NA, diff(Daylength_hours))) %>% # Calculate daily differences
  summarize(Average_Diff = mean(Daily_Diff, na.rm = TRUE)) %>% # Average daily differences
  arrange(desc(Average_Diff))


largest_diff_month <- result[1, ]
lowest_diff_month <- result[12, ]

result <- result %>%
  mutate(Average_Diff_Minutes = Average_Diff * 60)

# Extract the largest and lowest average difference months in minutes
largest_diff_month <- result[1, c("Month", "Average_Diff_Minutes")]
lowest_diff_month <- result[12, c("Month", "Average_Diff_Minutes")]



print(largest_diff_month)
print(lowest_diff_month)

closest_to_zero <- result[which.min(abs(result$Average_Diff)), ]

print(closest_to_zero)


january <- add_day_of_year(january, 1)
february <- add_day_of_year(february, 32)  
march <- add_day_of_year(march, 60) 
april <- add_day_of_year(april, 91)
may <- add_day_of_year(may, 121)
june <- add_day_of_year(june, 152)
july <- add_day_of_year(july, 182)
august <- add_day_of_year(august, 213)
september <- add_day_of_year(september, 244)
october <- add_day_of_year(october, 274)
november <- add_day_of_year(november, 305)
december <- add_day_of_year(december, 335)

january <- convert_to_character(january)
february <- convert_to_character(february)
march <- convert_to_character(march)
april <- convert_to_character(april)
may <- convert_to_character(may)
june <- convert_to_character(june)
july <- convert_to_character(july)
august <- convert_to_character(august)
september <- convert_to_character(september)
october <- convert_to_character(october)
november <- convert_to_character(november)
december <- convert_to_character(december)

year_data <- bind_rows(january, february, march, april, may, june, july, august, september, october, november, december)

year_data_max <- bind_rows(may, june, july)

year_data$Daylength_numeric <- sapply(year_data$Daylength, time_to_hours)

min_value <- year_data %>% filter(Daylength_numeric == min(Daylength_numeric))

max_value <- year_data %>% filter(Daylength_numeric == max(Daylength_numeric))
max_value <- 
  max_value %>% 
  filter(
    Year == 21
  )
max_value_x <- year_data %>% filter()

month_labels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
                  "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
month_breaks <- c(1, 32, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335)

# ----- For Graph 2,4 ---------


june$Daylength_numeric_june <- sapply(june$Daylength, time_to_hours)

max_value_june <- june %>% filter(Daylength_numeric_june == max(Daylength_numeric_june))

min <- 
  min(june$Daylength_numeric_june)
#min <- ceiling(min(june$Daylength_numeric_june))
min <- round(min(june$Daylength_numeric_june), 1)

closest_to_zero <- result[which.min(abs(result$Average_Diff)), ]


max_value_june <- june %>% filter(Daylength_numeric_june == max(Daylength_numeric_june))

min_value_june_1 <- min(june$Daylength_numeric_june, na.rm = TRUE)
max_value_june_1 <- max(june$Daylength_numeric_june, na.rm = TRUE)
day_min_june <- june$Year[which.min(june$Daylength_numeric_march)]  # Day for min value
day_max_june <- june$Year[which.max(june$Daylength_numeric_march)]  # Day for max value

difference_june <- round(max_value_june_1 - min_value_june_1, 2)

difference_june_minutes <- difference_june * 60

june$Daylength_numeric_june <- sapply(june$Daylength, time_to_hours)

hours <- floor(difference_june)
minutes <- round((difference_june - hours) * 60)

difference_june_time <- sprintf("%02d:%02d", hours, minutes)



# ------ For Graph 3 -------
march$Daylength_numeric_march <- sapply(march$Daylength, time_to_hours)



min_value <- min(march$Daylength_numeric_march, na.rm = TRUE)
max_value <- max(march$Daylength_numeric_march, na.rm = TRUE)
day_min <- march$Year[which.min(march$Daylength_numeric_march)]  # Day for min value
day_max <- march$Year[which.max(march$Daylength_numeric_march)]  # Day for max value
difference <- round(max_value - min_value, 2)

difference_minutes <- difference * 60

hours <- floor(difference)
minutes <- round((difference - hours) * 60)

difference_minutes_time <- sprintf("%02d:%02d", hours, minutes)

```

```{r}
#| label: tweak-data-2
#| code-summary: Wrangle datas
#| warning: false
#| eval: false
#| echo: false


time_to_hours <- function(time) {
  parts <- str_split(time, ":")[[1]]
  as.numeric(parts[1]) + as.numeric(parts[2]) / 60 + as.numeric(parts[3]) / 3600
} 


year$Daylength_numeric <- sapply(year$Daylength, time_to_hours)
year$Year <- as.numeric(year$Year)


august$Daylength_numeric <- sapply(august$Daylength, time_to_hours)
august$Year <- as.numeric(august$Year)

ggplot(data = august, aes(x = Year, y = Daylength_numeric)) +
  geom_line(color = "green", size = 1) +
  geom_point(color = "orange", size = 2) +
  labs(
    title = "Day Length Trend for August",
    x = "Day of August",
    y = "Day Length (Hours)"
  ) +
  theme_minimal()

```

# Graph 1 (Year)

Graph that display the relation between *Days of the Year* and the *Length of their solar days*.

```{r}
#| label: graph-1
#| code-summary: Graph 1 code
#| warning: false
#| results: hold
#| code-fold: true

add_day_of_year <- function(data, start_day) {
  data <- data %>% mutate(Day_of_Year = start_day:(start_day + nrow(data) - 1))
  return(data)
}

convert_to_character <- function(data) {
  data <- data %>% mutate(Year = as.character(Year))
  return(data)
}

time_to_hours <- function(time) {
  parts <- str_split(time, ":")[[1]]
  as.numeric(parts[1]) + as.numeric(parts[2]) / 60 + as.numeric(parts[3]) / 3600
} 

months <- rep(month.abb, times = c(nrow(january), nrow(february), nrow(march), 
                                   nrow(april), nrow(may), nrow(june), nrow(july), 
                                   nrow(august), nrow(september), nrow(october), 
                                   nrow(november), nrow(december)))
year$Month <- months

year$Daylength_hours <- sapply(year$Daylength, time_to_hours)

result <- year %>%
  group_by(Month) %>%
  arrange(as.numeric(Year)) %>% # Ensure data is sorted within each month
  mutate(Daily_Diff = c(NA, diff(Daylength_hours))) %>% # Calculate daily differences
  summarize(Average_Diff = mean(Daily_Diff, na.rm = TRUE)) %>% # Average daily differences
  arrange(desc(Average_Diff))


largest_diff_month <- result[1, ]
lowest_diff_month <- result[12, ]

result <- result %>%
  mutate(Average_Diff_Minutes = Average_Diff * 60)

# Extract the largest and lowest average difference months in minutes
largest_diff_month <- result[1, c("Month", "Average_Diff_Minutes")]
lowest_diff_month <- result[12, c("Month", "Average_Diff_Minutes")]





january <- add_day_of_year(january, 1)
february <- add_day_of_year(february, 32)  
march <- add_day_of_year(march, 60) 
april <- add_day_of_year(april, 91)
may <- add_day_of_year(may, 121)
june <- add_day_of_year(june, 152)
july <- add_day_of_year(july, 182)
august <- add_day_of_year(august, 213)
september <- add_day_of_year(september, 244)
october <- add_day_of_year(october, 274)
november <- add_day_of_year(november, 305)
december <- add_day_of_year(december, 335)

january <- convert_to_character(january)
february <- convert_to_character(february)
march <- convert_to_character(march)
april <- convert_to_character(april)
may <- convert_to_character(may)
june <- convert_to_character(june)
july <- convert_to_character(july)
august <- convert_to_character(august)
september <- convert_to_character(september)
october <- convert_to_character(october)
november <- convert_to_character(november)
december <- convert_to_character(december)

year_data <- bind_rows(january, february, march, april, may, june, july, august, september, october, november, december)

year_data_max <- bind_rows(may, june, july)

year_data$Daylength_numeric <- sapply(year_data$Daylength, time_to_hours)

min_value <- year_data %>% filter(Daylength_numeric == min(Daylength_numeric))

max_value <- year_data %>% filter(Daylength_numeric == max(Daylength_numeric))
max_value <- 
  max_value %>% 
  filter(
    Year == 21
  )
max_value_x <- year_data %>% filter()

month_labels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
                  "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
month_breaks <- c(1, 32, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335)




ggplot(data = year_data, aes(x = Day_of_Year, y = Daylength_numeric)) +
  geom_line(color = "#1f78b4", size = 1) +
  geom_point(color = "red", size = NA, alpha = 0.5) +
  geom_point(data = min_value, aes(x = Day_of_Year, y =      Daylength_numeric),color = "black", size = 4, shape = 21, fill = "#a6cee3", alpha = 0.8) +
  geom_point(data = max_value, aes(x = Day_of_Year, y = Daylength_numeric),color = "black", size = 4, shape = 21, fill = "#a6cee3", alpha = 0.8) +
     geom_text(
    data = min_value, fontface = "plain", aes(label = paste0("Min: 8.2 ")),
    vjust = -3, hjust = 2.3, color = "black"
  ) +
  geom_text(
    data = max_value, aes(label = paste0("Max: 16.24")),
    vjust = 2, hjust = 2, color = "black"
  ) + 
  geom_segment(data = min_value, aes(x = Day_of_Year, xend = Day_of_Year,y = 8, yend = Daylength_numeric), linetype = "dashed", color = "black") +
  geom_segment(data = max_value, aes(x = Day_of_Year, xend = Day_of_Year,y = 8, yend = Daylength_numeric), linetype = "dashed", color = "black") +
  geom_segment(data = min_value, aes(x = 1, xend = Day_of_Year, y = Daylength_numeric, yend = Daylength_numeric), linetype = "dashed", color = "black") +
  geom_segment(data = max_value, aes(x = 1, xend = Day_of_Year, y = Daylength_numeric, yend = Daylength_numeric),linetype = "dashed", color = "black") +
   #geom_vline(data = min_value, aes(xintercept = Day_of_Year), linetype = "dashed", color = "#33a02c") +
  #geom_vline(data = max_value, aes(xintercept = Day_of_Year), linetype = "dashed", color = "#33a02c") +
  #geom_hline(data = min_value, aes(yintercept = Daylength_numeric), linetype = "dashed", color = "#33a02c") +
  #geom_hline(data = max_value, aes(yintercept = Daylength_numeric), linetype = "dashed", color = "#33a02c") +
  labs(
    title = "Day Length Trend Throughout the Year",
    x = "Day of the Year",
    y = "Day Length (Hours)",
    caption = "by Oleksandr Koval",
    subtitle = "Graph that displayed dependence between Daylength and Day of the year (Whole year from 1 january)"
  ) +
  theme_minimal() +
  #scale_x_continuous(breaks = seq(1, 365, by = 20), minor_breaks = NULL) +
 # scale_y_continuous(breaks = seq(1, 18), minor_breaks = NULL)
  scale_x_continuous(breaks = month_breaks, labels = month_labels, minor_breaks = NULL) +
  scale_y_continuous(breaks = seq(1, 18), minor_breaks = NULL)



```

You can see the longest and the shortest day in the year.

Longest -- 20 and 21 June (I chose the 21-th, but honestly the difference less than 1s)

Shortest -- 21 December

# Graph 2 (June)

Graph display month which have the days with highest length of solar day (16:14:30).

```{r}
#| label: graph-2
#| code-summary: Graph 2 code
#| warning: false
#| code-fold: true
#| results: hold


# Create the plot
ggplot(june, aes(x = as.numeric(Year), y = Daylength_numeric_june)) +
  geom_line(color = "#1f78b4", size = 1) +            # Line graph
  geom_point(color = "black", size = 2) +  # Dot graph
  geom_point(data = max_value_june, aes(x = as.numeric(Year), y = Daylength_numeric_june),color = "black", size = 4, shape = 21, fill = "#a6cee3", alpha = 0.8) +
  geom_segment(
    data = max_value_june,
    aes(x = as.numeric(Year), xend = as.numeric(Year), y = 15.9, yend = Daylength_numeric_june),
    color = "black", linetype = "dashed"
  ) +  # Vertical line to the highest value
  geom_segment(
    data = max_value_june,
    aes(x = 1, xend = as.numeric(Year), y = Daylength_numeric_june, yend = Daylength_numeric_june),
    color = "black", linetype = "dashed"
  ) +  # Horizontal line to the highest value
  labs(
    title = "Day Length in June",
    x = "Day of the Month (June)",
    y = "Day Length (Hours)",
    caption = "by Oleksandr Koval",
    subtitle = "Graph between Daylength and Days of June"
  ) +
  theme_minimal() +
  scale_x_continuous(
    breaks = c(seq(1, max(as.numeric(june$Year)), by = 2), 20, 21),  # Add June 20 and 21 to the breaks
    minor_breaks = NULL,
    limits = c(1, 29)
  ) +
  scale_y_continuous(
    breaks = c(
      round(floor(min(june$Daylength_numeric_june)), 1),  # Round the minimum value to 1 decimal place
      seq(floor(min(june$Daylength_numeric_june)) + 0.1, ceiling(max(june$Daylength_numeric_june)), by = 0.1),
      ceiling(max(june$Daylength_numeric_june)) 
    ),
    minor_breaks = NULL,
    limits = c(15.9, 16.3)
  )

```

In 2024 June have two days when length the solar day are the same. 20 and 21 June have very close values so I can allow to show two point on graph.

# Graph 3 (June)

Also, June have the *lowest average difference in the length of solar days*.

```{r}
#| label: graph-3
#| code-summary: Graph 3 code
#| warning: false
#| code-fold: true
#| results: hold

closest_to_zero <- result[which.min(abs(result$Average_Diff)), ]




max_value_june <- june %>% filter(Daylength_numeric_june == max(Daylength_numeric_june))

min_value_june_1 <- min(june$Daylength_numeric_june, na.rm = TRUE)
max_value_june_1 <- max(june$Daylength_numeric_june, na.rm = TRUE)
day_min_june <- june$Year[which.min(june$Daylength_numeric_march)]  # Day for min value
day_max_june <- june$Year[which.max(june$Daylength_numeric_march)]  # Day for max value

difference_june <- round(max_value_june_1 - min_value_june_1, 2)
june$Daylength_numeric_june <- sapply(june$Daylength, time_to_hours)



ggplot(data = june, aes(x = as.numeric(Year), y = Daylength_numeric_june)) + 
  geom_line(color = "#1f78b4", size = 1) + 
  geom_point(color = "black", size = 2) +
  annotate("text", x = 20, y = 16.10,label = paste("Difference:", difference_june, "hours;\n", difference_june_minutes, "min;\n", difference_june_time, "Time I.S"), color = "black", size = 3.5, fontface = "plain") +
  labs(
    title = "Relation between Daylength and Days of June",
    x = "Day of the Month (June)",
    y = "Day Length (Hours)",
    caption = "by Oleksandr Koval",
    subtitle = "Month which have the lowest average difference in the length of solar days"
  ) +
  theme_minimal() +
   #scale_x_continuous(breaks = seq(1, max(as.numeric(june$Year)), by = 2),minor_breaks = NULL) +
  #scale_y_continuous(breaks = seq(floor(min(june$Daylength_numeric_june)),ceiling(max(june$Daylength_numeric_june)), by = 0.1),minor_breaks = NULL) 
 scale_x_continuous(
    breaks = seq(1, max(as.numeric(june$Year)), by = 2),
    minor_breaks = NULL
  ) +
  scale_y_continuous(
    breaks = seq(floor(min(june$Daylength_numeric_june)), ceiling(max(june$Daylength_numeric_june)), by = 0.1),
    minor_breaks = NULL,
    limits = c(15.9, 16.3)  # Set limits directly in scale_y_continuous
  ) 

```

The difference between the longest night and the shorter night is only 0.28 hours or **16.8 min**.

I.S -- the International System of Time

# Graph 4 (March)

Graph shows the months which have the largest average difference of solar day.

```{r}
#| label: graph-4
#| code-summary: Graph 4 code
#| warning: false
#| code-fold: true
#| results: hold

# ---- March -----------------------------------------------------


march$Daylength_numeric_march <- sapply(march$Daylength, time_to_hours)



min_value <- min(march$Daylength_numeric_march, na.rm = TRUE)
max_value <- max(march$Daylength_numeric_march, na.rm = TRUE)
day_min <- march$Year[which.min(march$Daylength_numeric_march)]  # Day for min value
day_max <- march$Year[which.max(march$Daylength_numeric_march)]  # Day for max value
difference <- round(max_value - min_value, 2)

ggplot(data = march, aes(x = as.numeric(Year), y = Daylength_numeric_march)) + 
  geom_line(color = "#1f78b4", size = 1) + 
  geom_point(color = "black", size = 2) +
  geom_segment(aes(x = 0, xend = as.numeric(day_min),y = min_value, yend = min_value), color = "black", linetype = "dashed", fontface = "plain") +
  geom_segment(aes(x = min(as.numeric(march$Year)), xend =  max(as.numeric(march$Year)),y = max_value, yend = max_value),color = "black", linetype = "dashed",) +
  annotate(
  "text",
  x = 8, 
  y = 12.2,
  label = paste("Difference:", difference, "hours;\n",
                difference_minutes, "min;\n",
                difference_minutes_time, "Time I.S"),
  color = "black",
  size = 3.5,
  fontface = "plain"
) +
  labs(
    title = "Relation between Daylength and Days of March",
    subtitle = "Month which have the largest average difference in the length of solar days",
    x = "Day of the Month",
    y = "Daylength(Hours)",
    caption = "by Oleksandr Koval"
  ) +
  scale_x_continuous(name = "Day of the Month", 
                     limits = c(0, max(as.numeric(march$Year))), 
                     breaks = seq(0, max(as.numeric(march$Year)), by = 5)) +
  scale_y_continuous(name = "Daylength (Hours)", 
                     limits = c(min_value - 1, max_value + 1), 
                     breaks = seq(floor(min_value), ceiling(max_value), by = 1)) +
  ylim(11, 13) +
  theme_minimal()

  




```

Difference from first and last dates of month is **109 min** or 1:50 hours. Whiletime this month night changes almost on 2 hours.
