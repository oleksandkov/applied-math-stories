---
title: "Example: Combined in Quarto"
author: "Andriy Koval, Oleksandr Koval"
format:
  html:
    page-layout: full
    toc: true
    toc-location: right
    code-fold: show
    theme: simplex
    highlight-style: github
    colde-line-numbers: true
    css: styles.css
    self-contained: true
editor: visual
editor_options: 
  chunk_output_type: console
---

This report examines rankings of Ukrainian universities in 2024 as reported by ... .

# Data

We extract the [data table](https://euroosvita.net/index.php/?category=49&id=8251) with university rankings for 2024 as reported by \[Euro Osvita\]\[https://euroosvita.net\].

```{r}
#| label: load-data-1
#| warning: false
library(tidyverse)
library(rvest)
library(ggplot2)

# Specify the URL of the webpage
url <- "https://euroosvita.net/index.php/?category=49&id=8251"

# Read the HTML content of the webpage
webpage <- read_html(url)

# Extract the table(s) from the HTML content
tables <- html_table(webpage, fill = TRUE)

# Access the desired table (may not be the first one)
ds0 <- tables[[5]]
```

A [separate page](https://euroosvita.net/index.php/?category=1&id=8252) describes 10 indices used to compile the ranking.

```{r}
# we manually copy-paste Table 3 into a google spreadsheet, manually tweak,
# augment with additional variables, and inport into R.  Consider this workflow,
# as an alternative for using propriary software such as MS Excel
library(googlesheets4)
googlesheets4::gs4_deauth() # to indicate there is no need for a access token
# By default we will work with public Sheets
# but see https://googlesheets4.tidyverse.org/ for how to set access to private
# URL https://docs.google.com/spreadsheets/d/1Ha5JmJRzV1e2ljN3lNLu-pZJwyehJPoKrw9CtMvBMks/edit?usp=sharing
sheet_name <- "1es_-MBukFcmptQ6IvYmT1Q6kC2ZXHOye0IBPSQbChcQ"
tab_name1 <- "raw"
tab_name2 <- "input"

ds_edu_index <- read_sheet(sheet_name,tab_name2,skip = 0)
spreadsheet_url <- "https://docs.google.com/spreadsheets/d/1es_-MBukFcmptQ6IvYmT1Q6kC2ZXHOye0IBPSQbChcQ/edit?usp=sharing"
ds_edu_index %>% glimpse()
```

```{r}
#| label: tweak-data-1
#| code-summary: Wrangle data
var_names <- c(
 "rank_2024" = "РЕЙТИНГ  2024"
,"school_name" = "ЗВО"
,"index_2024" = "∑  ІНДЕКСІВ  ЗВО"
,"qs_rank" = "Рейтинг  QS"
,"qs_index" = "ІНДЕКС  для  QS"
,"scopus_rank" = "Рейтинг  Scopus"
,"scopus_index" = "ІНДЕКС  для  Scopus"
,"webometrics_rank" = "Рейтинг  Webometrics"
,"webometrics_index" = "ІНДЕКС  для  Webometrics"
,"uimpact_rank" = "Рейтинг  THE  University  Impact"
,"uimpact_index" = "ІНДЕКС  для  THE  University  Impact"
,"wur_rank" = "Рейтинг  THE  WUR"
,"wur_index" = "ІНДЕКС  для  THE  WUR"
,"qswur_rank" = "QS  WUR  Sustainability"
,"qswur_index" = "ІНДЕКС  для  QS  WUR  Sustainability"
,"competition_rank" = "Рейтинг  переможців  наукових  конкурсів"
,"competition_index" = "ІНДЕКС  для  переможців  наукових  конкурсів"
,"naqa_rank" = "Рейтинг  Акредитаційних  справ  НАЗЯВО  2019-2023"
,"naqa_index" = "ІНДЕКС  для  Акредитаційних  справ  НАЗЯВО  2019-2023"
,"patent_rank" = "Рейтинг  за  кількістю  отриманих  патентів"
,"patent_index" = "ІНДЕКС  для  отриманих  патентів"
,"mean_rank" = "Середнє  арифметичне  рейтингових  місць  за  Заявами  вступників  та  СКБ"
,"mean_index" = "ІНДЕКС  для  Заяв  вступників  та  СКБ"
)

ds0 %>% glimpse()
ds_names <- 
  ds0 %>% slice(1) %>% t() %>% 
  as_tibble() %>%
  rename(
    ua_name = V1
  ) 

ds1 <- 
  ds0 %>% 
  slice(2:nrow(ds0)) # Because it contains the names of the columns

names(ds1) <- names(var_names)
ds_names  %>% print(n=nrow(.))
ds0 %>% glimpse()
ds1 %>% glimpse()
```

# Tweek data 2

We can see that the *"index_2024"* directly proportional to *"rank_2024"*

We can see that the *"qs_index"* directly proportional to *"qs_rank"*

Also, the lowest value of *"qs_rank"* is 7

```{r}
#| label: tweek-data-2
#| code-summary: Preparing data to use 
#| warning: false
#| results: false
#| code-fold: true

convert_to_numeric <- function(x) {
  # Replace comma with dot
  x <- gsub(",", ".", x)
  # Convert to numeric
  as.numeric(x)
}


ds2 <- 
  ds1 %>% 
  mutate(
    scopus_index = convert_to_numeric(scopus_index),
    index_2024 = convert_to_numeric(index_2024),
    rank_2024 = as.numeric(rank_2024),
    scopus_rank = as.numeric(scopus_rank),
    qs_rank = as.numeric(qs_rank)
  ) 

ds2 <- 
  ds2 %>% 
  filter(
    rank_2024 <= 50
  )

number_students <- 
  c(40500, 32000, 	33500, 16000, 	12000, 19357, 26000, 24000, 20000, 8000, 	8260, 13958, 4422,  20000, 14000, 10315, 	15479, 	14460, 9234 , 6530, 	27517,6167, 	6000, 	8589, 7000, 	6618, 	12200, 12000, 	6300, 	10000, 3847, 25000, 15000, 5284, 14000,  20000, 6000, 20000, 	7403, 	20000, 36600, 4000, 8000, 	14000, 5000, 5150, 9000, 178, 4500, 8840)

ds2 <- ds2 %>%
  mutate(number_students = number_students)

ds2 <- 
  ds2 %>% 
  mutate(
    number_students = as.numeric(number_students)
  )

ds2_scopus <- 
  ds2 %>% 
  filter(
    scopus_rank > rank_2024
  )

ds2_scopus_high_qs <- 
  ds2_scopus %>% 
  filter(
    qs_rank < 7
  )
ds2_scopus_low_qs <- 
  ds2_scopus %>% 
  filter(
    qs_rank == 7
  )

ds2_rank <- 
  ds2 %>% 
  filter(
    rank_2024 > scopus_rank
  )

ds2_rank_high_qs <- 
  ds2_rank %>% 
  filter(
    qs_rank < 7
  )
ds2_rank_low_qs <- 
  ds2_rank %>% 
  filter(
    qs_rank == 7
  )

ds2_kyiv <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Київ")))
ds2_lviv <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Львів")))
ds2_zhu <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Житом")))
ds2_kharkiv <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Харків")))
ds2_vinn <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Вінн")))
ds2_cher <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Чернів")))
ds2_kam <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Кам'ян")))
ds2_odd <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Одес")))
ds2_hme <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Хмель")))
ds2_dnipro <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Дніпро")))
ds2_sumy <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Суми")))
ds2_cherkasy <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Черкаси")))
ds2_mykolaiv <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Миколаїв")))
ds2_kropyvnytskyi <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Кропивницький")))
ds2_poltava <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Полтава")))
ds2_zaporizhzhia <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Запоріжжя")))
ds2_ternopil <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Терноп")))
ds2_ivano_frankivsk <- ds2 %>% filter(if_any(everything(), ~ str_detect(.x, "Івано-Франків")))

ds2_kyiv_kpi <- 
  ds2 %>% 
  filter(if_any(everything(), ~ str_detect(.x, "Київський  політехнічний  інститут  імені  Ігоря  Сікорського")))

determine_qs_rank <- function(data) {
  if (!"school_name" %in% colnames(data) || !"qs_rank" %in% colnames(data)) {
    stop("The dataset must contain 'university_name' and 'qs_rank' columns.")
  }
  
  data %>% 
    select(school_name, qs_rank) %>% 
    arrange(qs_rank)  # Sort universities by qs_rank
}
  
qs_rank_values <- determine_qs_rank(ds2)  

# ---- Ranks -----------------------------------------------------
#ds2 <- ds2 %>% slice(1:2)
#ds2_ranks <- 
          #ds2 %>%
           # select(
             # contains("rank"),
             # contains("name")
            #)

#ds2_ranks <- 
  #ds2_ranks %>%
  #(across(-school_name, as.numeric))
#ds2_ranks <- 
  #ds2_ranks %>% 
  #select(-mean_rank)
# ---- КПІ -----------------------------------------------------
#ds2_ranks_kpi <- 
  #ds2_ranks %>% 
  #slice(1)
  
ds2 %>% glimpse()

```

# Graph 1

Graph shows the relation between Scopus rank and Rank 2024.

The red means that the university has higher position in **Scopus rank** than in **Rank 2024**

The blue mean that the university has higher position in **Rank 2024** than in **Scopus rank**

Squares mean that the university has higher rank in QS Rate than 7, the bigger square is the better rank the university has.

The more visible objects are the more students teaching there.

```{r}
#| label: graph-1
#| code-fold: true
#| results: hold
#| code-summary: Graph 1
#| warning: false

g1 <- 
  ds2 %>% 
  ggplot(aes(x = rank_2024, y = scopus_rank)) + 
  geom_point(data = ds2_scopus_low_qs, aes(size = 1 / qs_rank, alpha = number_students), color = "red", shape = 21, fill = "grey", size = 3) +
  geom_point(data = ds2_scopus_high_qs, aes(size = 1 / qs_rank, alpha = number_students), color = "red", shape = 22, fill = "grey") +
  geom_point(data = ds2_rank_low_qs, aes(size = 1 / qs_rank, alpha = number_students), color = "blue", shape = 21, fill = "grey", size = 3) +
  geom_point(data = ds2_rank_high_qs, aes(size = 1 / qs_rank, alpha = number_students), color = "blue", shape = 22, fill = "grey" ) +
  #geom_point(data = ds2_kyiv_kpi, shape = 21, fill = "gold", color = "black", size = 5, stroke = 1.5) +  
   guides(alpha = guide_legend(override.aes = list(shape = 21, color = "grey",fill = "grey"))) +
   guides(size = guide_legend(override.aes = list(shape = 22, color = "black", fill = "grey"))) +
  #guides(color = guide_legend(title = "Category")) +
  scale_size_continuous(range = c(3, 6)) +  
  scale_alpha_continuous(
    range = c(0.2, 1),
    breaks = c(1000, 2000, 5000, 10000, 20000, 30000, 40000),  
    labels = c("1k", "2k", "5k", "10k", "20k", "30k", "40k")
  ) +
  #scale_color_manual(
    #values = c(
       #"Universities which have higher rank in Scopus rank than in Rank 2024 in Ukraine"= "red",
       #"Universities which have higher rank in Rank 2024 in Ukraine than in Scopus rank" = "blue"
    #)
  #) +
  labs(
    size = "QS Rank",
    alpha = "Number of students",
    x = "Rank 2024 in Ukraine",
    y = "Scopus rank",
    title = "Relation between scopus and 2024 ranks",
    subtitle = "The number of top 50 universities in Ukraine",
    caption = "by Oleksandr Koval"
    ) +         
  theme_minimal()

g1

```

You can see on this graph:

1.  Relation between **Scopus rank** and **Rank 2024 in Ukraine**
2.  Universities which have higher rank in *Scopus rank* than in *Rank 2024 in Ukraine* (on graph have red color)
3.  Universities which have higher rank in *Rank 2024 in Ukraine* than in *Scopus rank* (on graph have blue color)
4.  The universities which have higher rank of **QS rate** than 7 (On graph show as a squares, the higher rate it have the bigger square is)
5.  The number of students who are studying there (On graph the more visible objects are the more students studying there)
