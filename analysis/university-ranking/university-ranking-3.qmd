---
title: "Example: Combined in Quarto"
author: "Andriy Koval, Oleksandr Koval"
format:
  html:
    page-layout: full
    toc: true
    toc-location: right
    code-fold: show
    theme: simplex
    highlight-style: github
    colde-line-numbers: true
    css: styles.css
    self-contained: true
editor: visual
editor_options: 
  chunk_output_type: console
---

This report examines rankings of Ukrainian universities in 2024 as reported by ... .

```{r}
library(tidyverse)
library(rvest)
library(ggplot2)
library(magrittr)
```

# Data

We extract the [data table](https://euroosvita.net/index.php/?category=49&id=8251) with university rankings for 2024 as reported by \[Euro Osvita\]\[https://euroosvita.net\].

```{r}
#| label: load-data-1
#| warning: false
#| cache: true

# Specify the URL of the webpage
url <- "https://euroosvita.net/index.php/?category=49&id=8251"

# Read the HTML content of the webpage
webpage <- read_html(url)

# Extract the table(s) from the HTML content
tables <- html_table(webpage, fill = TRUE)

# Access the desired table (may not be the first one)
ds0 <- tables[[5]] # the focal table of analysis, EUROOSVITA ranks
```

A [separate page](https://euroosvita.net/index.php/?category=1&id=8252) describes 10 indices used to compile the ranking.

```{r}
#| label: import-from-google-sheet
#| code-summary: Importing data from supporting google sheets
#| results: hide
#| cache: true
# we manually copy-paste Table 3 into a google spreadsheet, manually tweak,
# augment with additional variables, and inport into R.  Consider this workflow,
# as an alternative for using propriary software such as MS Excel
library(googlesheets4)
googlesheets4::gs4_deauth() # to indicate there is no need for a access token
# By default we will work with public Sheets
# but see https://googlesheets4.tidyverse.org/ for how to set access to private
# URL https://docs.google.com/spreadsheets/d/1Ha5JmJRzV1e2ljN3lNLu-pZJwyehJPoKrw9CtMvBMks/edit?usp=sharing
sheet_name <- "1es_-MBukFcmptQ6IvYmT1Q6kC2ZXHOye0IBPSQbChcQ"
tab_name1 <- "raw"
tab_name2 <- "input"

ds_edu_index <- read_sheet(sheet_name,tab_name2,skip = 0)
spreadsheet_url <- "https://docs.google.com/spreadsheets/d/1es_-MBukFcmptQ6IvYmT1Q6kC2ZXHOye0IBPSQbChcQ/edit?usp=sharing"
ds_edu_index %>% glimpse()


ds_school_meta <- 
  read_sheet(
    ss = "1MbTBWkIPMeIIjmLH4Q__TVWUg9y9KqTY34MwWYP0HoM"
    ,sheet = "Sheet1"
    ,skip = 0
) 
ds_school_meta %>% glimpse()

ds_school_meta2 <- 
  read_sheet(
    ss = "1MDc4A-_ueo7a90lxJBzIGE-VsKzwjkOTs7Oi_z1ZRsE"
    ,sheet = "edu-base"
    ,skip = 0
  ) 

ds_school_meta2 %>% glimpse()

ds_myrank <- 
  read_sheet(
    ss = "1_JEO1ygEHbl6Gr5QX4Uj_v2M7J78ZAa283zXRqVD_Ns"
    ,sheet = "Sheet1"
    ,skip = 0
  ) %>% mutate(rank_2024 = rank(index_2024, ties.method = "min")) %>% select(rank_2024, everything())

ds_myrank %>% glimpse()

```

# Tweak Data 1

```{r}
#| label: tweak-data-1
#| code-summary: Wrangle data
#| results: hide
#| cache: true

ds1_school_contex <- 
  ds_school_meta %>% 
  left_join(
    ds_school_meta2 %>% select(-school_name)
    ,by = "school_id"
  ) %>% 
  rename(
    student_count             = student_body_2024
    ,department_count         = num_faculty
    ,program_count            = num_specility     
    ,application_total_count  = num_requests
    ,application_budget_count = num_budget
    ,score_mean               = mean_bal
  ) 
ds1_school_contex %>% glimpse()

var_names <- c(
 "rank_2024"        = "РЕЙТИНГ  2024"
,"school_name"      = "ЗВО"
,"index_2024"       = "∑  ІНДЕКСІВ  ЗВО"
,"qs_rank"          = "Рейтинг  QS"
,"qs_index"         = "ІНДЕКС  для  QS"
,"scopus_rank"      = "Рейтинг  Scopus"
,"scopus_index"     = "ІНДЕКС  для  Scopus"
,"webometrics_rank" = "Рейтинг  Webometrics"
,"webometrics_index"= "ІНДЕКС  для  Webometrics"
,"uimpact_rank"     = "Рейтинг  THE  University  Impact"
,"uimpact_index"    = "ІНДЕКС  для  THE  University  Impact"
,"wur_rank"         = "Рейтинг  THE  WUR"
,"wur_index"        = "ІНДЕКС  для  THE  WUR"
,"qswur_rank"       = "QS  WUR  Sustainability"
,"qswur_index"      = "ІНДЕКС  для  QS  WUR  Sustainability"
,"competition_rank" = "Рейтинг  переможців  наукових  конкурсів"
,"competition_index"= "ІНДЕКС  для  переможців  наукових  конкурсів"
,"naqa_rank"        = "Рейтинг  Акредитаційних  справ  НАЗЯВО  2019-2023"
,"naqa_index"       = "ІНДЕКС  для  Акредитаційних  справ  НАЗЯВО  2019-2023"
,"patent_rank"      = "Рейтинг  за  кількістю  отриманих  патентів"
,"patent_index"     = "ІНДЕКС  для  отриманих  патентів"
,"mean_rank"        = "Середнє  арифметичне  рейтингових  місць  за  Заявами  вступників  та  СКБ"
,"mean_index"       = "ІНДЕКС  для  Заяв  вступників  та  СКБ"
)

ds0 %>% glimpse()
ds_names <- 
  ds0 %>% slice(1) %>% t() %>% 
  as_tibble() %>%
  rename(
    ua_name = V1
  ) 

ds1 <- 
  ds0 %>% 
  slice(2:nrow(ds0))   # Because it contains the names of the columns
  
names(ds1) <- names(var_names)
ds_names  %>% print(n=nrow(.))
ds0 %>% glimpse()
ds1 %>% glimpse()
```

# Tweek data 2

We can see that the *"index_2024"* directly proportional to *"rank_2024"*

We can see that the *"qs_index"* directly proportional to *"qs_rank"*

Also, the lowest value of *"qs_rank"* is 7

```{r}
#| label: tweek-data-2
#| code-summary: Preparing data to use 
#| warning: false
#| results: hold
#| code-fold: true
#| cache: true

# At this point we have
ds1 %>% glimpse() # EUROOSVITA source
ds1_school_contex %>% glimpse()

convert_to_numeric <- function(x) {
  # Replace comma with dot
  x <- gsub(",", ".", x)
  # Convert to numeric
  as.numeric(x)
}

varnames_in_ds1 <- names(ds1)
varnames_to_convert_to_numeric <- setdiff(varnames_in_ds1, "school_name")


ds2 <- 
  ds1 %>% 
  mutate_at(
    .vars = varnames_to_convert_to_numeric
    ,.funs = ~convert_to_numeric(.)
  ) %>% 
  mutate(
    school_id = as.integer(rank_2024) # bc that's how we defined ID
  ) %>% 
  relocate(school_id) %>% 
  relocate(school_name,.after = "school_id")
  
# ds2 %>% glimpse()
ds1_school_contex %>% glimpse()

ds3 <- 
  ds2 %>%
  left_join(
    ds1_school_contex %>% select(-school_name, -rank_2024)
    ,by = "school_id"
  ) %>% 
  mutate(
    application_total_count = as.numeric(application_total_count)
  )

ds3 %>% glimpse()
```

# Explore

## Application count

```{r}
#| code-summary: compute total application
#| echo: false
total_application_2023 <- ds_school_meta2 %>% summarize(n = sum(num_requests)) %>% pull(n) 
```

In 2023 Ukrainian universities received the of `r scales::comma(total_application_2023)` applications according to https://vstup.edbo.gov.ua/.

```{r}
#| echo: false
# ds3 %>% glimpse()
top50_prop <- 
  ds3 %>% 
  filter(school_id <= 50 ) %>% 
  mutate(
    application_total_count = as.numeric(application_total_count)
  ) %>% 
  mutate(
    application_total_prop = as.numeric(application_total_count)/total_application_2023
  ) %>% 
  select(school_id, school_abb, application_total_count, application_total_prop) %>% 
  summarize(
    top50_prop = sum(application_total_prop)
  ) %>% 
  pull(top50_prop)
```

Top 50 universities (according to Euro Osvita ranking) received `r scales::percent(top50_prop)` of all applications submitted that year.

Among these 50, are there universities that stand out by the number of applications received? How is that related to the overall rank?

```{r}
#| code-summary: Index vs total applications
#| label: g1
#| code-fold: true
#| fig.width: 9
#| fig.height: 6

d1 <- 
  ds3 %>% 
  mutate(
    top4 = case_when(
      application_total_count > 25000 ~ TRUE
      ,TRUE ~ FALSE
    )
  ) %>% 
  filter(!is.na(region))

g1 <- 
  d1 %>% 
  ggplot(aes(x = index_2024, y = application_total_count, fill = region))+
  geom_point(size = 4, shape = 21, color = "black", alpha = .6)+
  # geom_text(aes(label = school_abb))+
  ggrepel::geom_text_repel(
    aes(label = school_abb)
    ,data = . %>% filter(top4)
    ,min.segment.length = .1
  )+
  # scale_color_manual(values = c("TRUE"="red","FALSE"="black"))+
  scale_x_continuous(
    limits = c(0, 30)
    ,minor_breaks = seq(0, 30, 2)
  )+
  scale_y_continuous(
    labels = scales::comma_format()
    ,breaks = seq(0,30000,10000)
    ,minor_breaks = seq(0, 30000, 2000)
  )+
  labs(
    title = "University index and total number of applications"
    ,y = "Total number of Application in 2023"
    ,x = "University index according to EuroOsvita"
  )+
  guides(
    fill = guide_legend(override.aes = list(size = 5)) # Adjust line thickness in legend
  )+
  labs(
    fill = "Region"
  )
g1
```

We suspect that the size of the city in which the university is located will influence the number of application submitted to that university. Let's test this hypothesis visually.

```{r}
#|echo: true
ds3 %>% glimpse()
d2 <- 
  ds3 %>% 
  mutate(
    student_count = as.numeric(student_count)
  ) %>% 
  #filter(school_id <= 50) %>% 
  select(school_id, school_abb, student_count, application_total_count, city_population, city, region) %>% 
  mutate(
    student_body_pct_city = student_count / city_population
    ,application_pct_city = application_total_count/ city_population
  ) %>% 
mutate(
  top5 = case_when(
    student_count > 30000 & city_population > 2000000 ~ TRUE,
    TRUE ~ FALSE
  )
)

d2

g2 <- 
  d2 %>% 
  ggplot(aes(x=city_population, y = student_count, fill = region))+
  geom_point(size = 4, shape = 21, color = "black")+
  ggrepel::geom_text_repel(
    aes(label = school_abb)
    ,data = . %>% filter(top5)
    ,min.segment.length = .1
  ) + 
  scale_x_continuous(
        labels = scales::comma_format()
        ,breaks = c(seq(0, 3000000, 1000000), 500000, 700000, 1500000)
        ,minor_breaks = seq(0, 3000000, 500000)
  ) +
  scale_y_continuous(
            labels = scales::comma_format()
            ,breaks = seq(0, 40000, 5000)
  ) + 
  labs(
    x = "Population of city"
    ,y = "Number of studetns who study there"
    , title = "City population and number of students in university"
    ,fill = "Region"
  ) + 
  theme_minimal()
g2
```
We do not observe a linear relationship between these two variables. 


```{r}
#| eval: FALSE
#| lable: draft1
# DRAFT
ds3 %>% 
  group_by(city, city_population) %>% 
  summarise(
    count = n()
  ) %>% 
  ungroup() %>% 
  print(n = Inf)

  d2 %>% 
  ggplot(aes(x=city_population, y = application_total_count))+
  geom_point()
# it looks like the size of the city does not influece the number of applications recieved by a university
# it looks like the size of the city does not influece the number of applications recieved by a university
  d2 %>% 
  ggplot(aes(x=city_population, y = student_body_pct_city))+
  geom_point()
  
  d2 %>% 
  ggplot(aes(x=city_population, y = application_pct_city))+
  geom_point()
  
  
  ds3 %>% 
    ggplot(aes(student_count, y = application_total_count, fill = region, size = city_population))+
    geom_point(shape = 21, color = "black", alpha = .5)+
    guides(
      fill = guide_legend(override.aes = list(size = 5)) # Adjust line thickness in legend
    )+
    facet_wrap(facets = "region", scales = "free")
```

# Geography of Education

```{r}
#| code-fold: true
#| code-summary: share of students
#| fig-width: 16
#| fig-height: 10

#| warning: false

# ds3 %>% glimpse()
# What cities are present in the data? (42)
# How many universities are in each city? (1-43)
# How many students are in each city/regions ()
# What percent of city's population are students? 
d1 <-
  ds3 %>% 
  group_by(region, oblast, city) %>%
  # group_by(oblast) %>%
  summarize(
    school_count = n_distinct(school_id)
    ,student_count = sum(student_count, na.rm = T)
  ) %>% 
  arrange(desc(school_count))

d_city_pop <- 
  ds3 %>% 
  distinct(city, city_population )

d2 <- 
  d1 %>% 
  left_join(d_city_pop) %>% 
  ungroup() %>% 
  mutate(
    pop_student_prop = student_count/city_population
  )

# d2 %>% print(n=Inf)

g1 <- 
  d2 %>% 
  filter(! city %in% c("Kyiv","Pokrovsk") ) %>% 
  ggplot(aes(x = city_population, y = pop_student_prop, fill = region ))+
  geom_point(shape = 21, color = "black", alpha = .5, size = 4) +
  facet_wrap(facets = "region", scales = "free_x")+
  scale_x_continuous(labels = scales::comma_format(scale = 1000, prefix = "M"))+
  ggrepel::geom_text_repel(aes(label = city),max.overlaps = 30)
g1

# # what university has the highest demand for budget places? 
# ds3 %>% glimpse()
# d1 <- 
#   ds3 %>% 
#   mutate(
#     budget_ratio = application_budget_count/ application_total_count
#   )
# d1
# 
# g1 <- 
#   d1 %>% 
#   ggplot(aes(x=score_mean, y = budget_ratio, color = oblast))+
#   # scale_x_continuous(limits = c(0,51))
#   geom_point()+
#   labs(
#     title  = "Relationship between average submitted score and share of application for public funding"
#     ,x = "Mean score of the application"
#     ,y = "Share of application for public fundtion"
#   )
# g1
```
